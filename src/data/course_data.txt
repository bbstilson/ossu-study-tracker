[Introduction to Computer Science - CS50](https://www.edx.org/course/introduction-computer-science-harvardx-cs50x#!)|12 weeks|10-20 hours/week|none|Core CS
[Effective Thinking Through Mathematics](https://www.edx.org/course/effective-thinking-through-mathematics-utaustinx-ut-9-01x)|9 weeks|5 hours/week|none|Core CS
[How to Code - Simple Data](https://www.edx.org/course/how-code-simple-data-ubcx-htc1x)|7 weeks|8-10 hours/week|none|Core CS
[How to Code - Complex Data](https://www.edx.org/course/how-code-complex-data-ubcx-htc2x)|6 weeks|8-10 hours/week|How to Code: Simple Data|Core CS
[Software Construction - Data Abstraction](https://www.edx.org/course/software-construction-data-abstraction-ubcx-softconst1x)|6 weeks|8-10 hours/week|How to Code - Complex Data|Core CS
[Software Construction - Object-Oriented Design](https://www.edx.org/course/software-construction-object-oriented-ubcx-softconst2x)|6 weeks|8-10 hours/week|Software Construction - Data Abstraction|Core CS
[Programming Languages, Part A](https://www.coursera.org/learn/programming-languages)|4 weeks|8-16 hours/week|recommended: Java, C|Core CS
[Programming Languages, Part B](https://www.coursera.org/learn/programming-languages-part-b)|3 weeks|8-16 hours/week|Programming Languages, Part A|Core CS
[Programming Languages, Part C](https://www.coursera.org/learn/programming-languages-part-c)|3 weeks|8-16 hours/week|Programming Languages, Part B|Core CS
[Essence of Linear Algebra](https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab)|-|-|pre-calculus|Core math
[Linear Algebra - Foundations to Frontiers](https://www.edx.org/course/linear-algebra-foundations-frontiers-utaustinx-ut-5-04x#!) ([alt](http://ulaff.net/))|15 weeks|8 hours/week|Essence of Linear Algebra|Core math
[Calculus 1A: Differentiation](https://www.edx.org/course/calculus-1a-differentiation-mitx-18-01-1x-0)|13 weeks|6-10 hours/week|pre-calculus|Core math
[Calculus 1B: Integration](https://www.edx.org/course/calculus-1b-integration-mitx-18-01-2x-0)|13 weeks|5-10 hours/week|Calculus 1A|Core math
[Calculus 1C: Coordinate Systems & Infinite Series](https://www.edx.org/course/calculus-1c-coordinate-systems-infinite-mitx-18-01-3x-0)|13 weeks|5-10 hours/week|Calculus 1B|Core math
[Mathematics for Computer Science](https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/index.htm)<sup>**1**</sup>|13 weeks|5 hours/week|Calculus 1C|Core math
[Build a Modern Computer from First Principles: From Nand to Tetris](https://www.coursera.org/learn/build-a-computer) ([alt](http://www.nand2tetris.org/))|6 weeks|7-13 hours/week|none|Core systems
[Build a Modern Computer from First Principles: Nand to Tetris Part II ](https://www.coursera.org/learn/nand2tetris2)|6 weeks|12-18 hours/week|one of [these programming languages](https://user-images.githubusercontent.com/2046800/35426340-f6ce6358-026a-11e8-8bbb-4e95ac36b1d7.png), From Nand to Tetris Part I|Core systems
[Introduction to Computer Networking](https://lagunita.stanford.edu/courses/Engineering/Networking-SP/SelfPaced/about)| 8 weeks|4â€“12 hours/week|algebra, probability, basic CS|Core systems
[ops-class.org - Hack the Kernel](https://www.ops-class.org/)|15 weeks|6 hours/week|algorithms|Core systems
[Algorithms: Design and Analysis, Part I](https://lagunita.stanford.edu/courses/course-v1:Engineering+Algorithms1+SelfPaced/about)|8 weeks|4-8 hours/week|any programming language, Mathematics for Computer Science|Core theory
[Algorithms: Design and Analysis, Part II](https://lagunita.stanford.edu/courses/course-v1:Engineering+Algorithms2+SelfPaced/about)|8 weeks|4-8 hours/week|Part I|Core theory
[Databases](https://lagunita.stanford.edu/courses/DB/2014/SelfPaced/about)| 12 weeks|8-12 hours/week|some programming, basic CS|Core applications
[Machine Learning](https://www.coursera.org/learn/machine-learning)| 11 weeks|4-6 hours/week|linear algebra|Core applications
[Computer Graphics](https://www.edx.org/course/computer-graphics-uc-san-diegox-cse167x)| 6 weeks|12 hours/week|C++ or Java, linear algebra|Core applications
[Cryptography I](https://www.coursera.org/course/crypto)| 6 weeks|5-7 hours/week|linear algebra, probability|Core applications
[Software Engineering: Introduction](https://www.edx.org/course/software-engineering-introduction-ubcx-softeng1x)|6 weeks|8-10 hours/week|Software Construction - Object-Oriented Design|Core applications
[Software Development Capstone Project](https://www.edx.org/course/software-development-capstone-project-ubcx-softengprjx)|6-7 weeks|8-10 hours/week|Software Engineering: Introduction|Core applications
